When would you want to use a remote repository rather than keeping all your work local?
- When you want to share your work with other people or have the project used between different computers.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
- You want to know when are ready to accept someone else's changes, so it doesn't create any conflicts, if you had it automatically updated, you wouldn't now when did the remote changed and modified your local version.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
- Forks are like clones when you are cloning from account to account, branches are paths that you want to tag your commit. You would use fork when you dont have permission to modify the repository.

What is the benefit of having a copy of the last known state of the remote stored locally?
- So you don't have to look it up at the internet therefore you will be able to compare versions locally.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
- I would use svn it is very similar to it, but I ended up liking Git more as of right now!

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
- When you want to work on different features is better if you work on branches and maybe you don't want to implement them yet in your main production ready project. But if you work with the master branch always you might save yourself the hassle of doing multiple merges.
